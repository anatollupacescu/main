<?xml version="1.0"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.comcast.xcal.mbus.webservice</groupId>
	<artifactId>MBusWebService</artifactId>
	<version>CCP-LATEST-SNAPSHOT</version>

	<name>MBus Web Service</name>
	<url>http://maven.apache.org</url>
	<packaging>war</packaging>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>

		<!-- Tools properties -->
		<eclipsePluginVersion>2.5</eclipsePluginVersion>
		<vmtype>org.eclipse.jdt.internal.debug.ui.launcher.StandardVMType</vmtype>
		<jdkName>JavaSE-1.6</jdkName>
		<jdk.version>1.6</jdk.version>

		<!--Dependencies versions -->
		<activemq-version>5.7.0</activemq-version>
		<spring-version>3.0.7.RELEASE</spring-version>
		<powermock-version>1.4.11</powermock-version>
		<testng-version>5.14.9</testng-version>
		<jersey-version>1.12</jersey-version>
		<httpunit-version>1.7</httpunit-version>
		<hamcrest-version>1.3</hamcrest-version>
		<ehcache-version>2.4.2</ehcache-version>
		<atmosphere-version>1.1.0.RC4</atmosphere-version>
		<httpclient-version>1.7.13</httpclient-version>
		<cglib-version>2.2.2</cglib-version>
		<javax-inject-version>1</javax-inject-version>
		<servlet-api-version>2.5</servlet-api-version>
		<slf4j-version>1.7.5</slf4j-version>
		<logback-version>0.9.24</logback-version>
		<janino-version>2.5.10</janino-version>
		<commons-lang-version>2.3</commons-lang-version>
		<rabbitmq-version>3.1.3</rabbitmq-version>
		<geromio-jms>1.1.1</geromio-jms>
		<branch>trunk</branch>
	</properties>

	<distributionManagement>
		<repository>
			<uniqueVersion>false</uniqueVersion>
			<id>ccp-deployables-releases</id>
			<name>CCP Deployables Releases</name>
			<url>http://maven.teamccp.com/content/repositories/ccp-deployables-releases</url>
			<layout>default</layout>
		</repository>
		<snapshotRepository>
			<uniqueVersion>false</uniqueVersion>
			<id>ccp-deployables-snapshots</id>
			<name>CCP Deployables Snapshots</name>
			<url>http://maven.teamccp.com/content/repositories/ccp-deployables-snapshots</url>
			<layout>default</layout>
		</snapshotRepository>
	</distributionManagement>
	<repositories>
		<repository>
			<id>ccp-master</id>
			<url>http://maven.teamccp.com/content/groups/master</url>
		</repository>
		<repository>
			<id>maven2-repository.dev.java.net</id>
			<url>http://download.java.net/maven/2/</url>
		</repository>
		<repository>
			<id>java.net</id>
			<name>java.net</name>
			<url>http://download.java.net/maven/2/</url>
		</repository>
		<repository>
			<id>codehaus</id>
			<name>Codehaus</name>
			<url>http://repository.codehaus.org</url>
		</repository>
		<repository>
			<id>maven2</id>
			<name>Maven Central</name>
			<url>http://repo1.maven.org/maven2/</url>
		</repository>
	</repositories>
	<description>
        A place for code that contains the different Message Bus flows
    </description>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.14.1</version>
				<configuration>
					<!--<suiteXmlFiles> -->
					<!--<suiteXmlFile>testng.xml</suiteXmlFile> -->
					<!--</suiteXmlFiles> -->
					<groups>unit,jms</groups>
				</configuration>
				<executions>
					<execution>
						<id>integration-test</id>
						<goals>
							<goal>test</goal>
						</goals>
						<phase>integration-test</phase>
						<configuration>
							<groups>web</groups>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
					<encoding>ISO-8859-1</encoding>
				</configuration>
			</plugin>
			<!-- support for putting all the dependencies in a single jar mvn assembly:single -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.3</version>
				<configuration>
					<webXml>src/main/webapp/WEB-INF/web.xml</webXml>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<!--<version>${jetty-plugin-version}</version> -->
				<version>7.6.5.v20120716</version>
				<configuration>
					<connectors>
						<connector implementation="org.eclipse.jetty.server.nio.SelectChannelConnector">
							<!--<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector"> -->
							<port>10189</port>
						</connector>
					</connectors>
					<stopPort>9966</stopPort>
					<stopKey>foo</stopKey>
					<webApp>
						<contextPath>/mbus</contextPath>
					</webApp>
					<systemProperties>
						<systemProperty>
							<name>LOG_DIR</name>
							<value>logs</value>
						</systemProperty>
					</systemProperties>
				</configuration>
				<executions>
					<execution>
						<id>start-jetty</id>
						<phase>pre-integration-test</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<scanIntervalSeconds>0</scanIntervalSeconds>
							<daemon>true</daemon>
						</configuration>
					</execution>
					<execution>
						<id>stop-jetty</id>
						<phase>post-integration-test</phase>
						<goals>
							<goal>stop</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jboss.tattletale</groupId>
				<artifactId>tattletale-maven</artifactId>
				<version>1.1.0.Final</version>
				<executions>
					<execution>
						<phase>verify</phase>
						<!-- needs to run after WAR package has been built -->
						<goals>
							<goal>report</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<source>${project.build.directory}/${project.build.finalName}/WEB-INF/lib</source>
					<destination>${project.reporting.outputDirectory}</destination>
					<reports>
						<report>jar</report>
						<!--<report>multiplejars</report> -->
					</reports>
					<profiles>
						<profile>java6</profile>
					</profiles>
					<failOnWarn>true</failOnWarn>
				</configuration>
			</plugin>
		</plugins>
	</build>

	<dependencies>
		<!-- testing -->
		<dependency>
			<groupId>org.testng</groupId>
			<artifactId>testng</artifactId>
			<version>${testng-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-testng</artifactId>
			<version>${powermock-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>${powermock-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.comcast.xcal.mbus</groupId>
			<artifactId>stateless-ack-broker-plugin</artifactId>
			<version>CCP-LATEST-SNAPSHOT</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.jersey-test-framework</groupId>
			<artifactId>jersey-test-framework-grizzly2</artifactId>
			<version>${jersey-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
			<version>${hamcrest-version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>javanettasks</groupId>
			<artifactId>httpunit</artifactId>
			<version>${httpunit-version}</version>
			<scope>test</scope>
		</dependency>
		<!-- ActiveMQ -->
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-core</artifactId>
			<version>${activemq-version}</version>
			<exclusions>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-api</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.fusesource.fuse-extra</groupId>
					<artifactId>fusemq-leveldb</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.activemq</groupId>
			<artifactId>activemq-pool</artifactId>
			<version>${activemq-version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.activemq</groupId>
					<artifactId>activemq-core</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>${ehcache-version}</version>
		</dependency>
		<!-- jersey, spring and atmosphere framework stack -->
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-client</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey</groupId>
			<artifactId>jersey-servlet</artifactId>
			<version>${jersey-version}</version>
		</dependency>
		<dependency>
			<groupId>com.sun.jersey.contribs</groupId>
			<artifactId>jersey-spring</artifactId>
			<version>${jersey-version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jms</artifactId>
			<version>${spring-version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.atmosphere</groupId>
			<artifactId>atmosphere-jersey</artifactId>
			<version>${atmosphere-version}</version>
		</dependency>
		<dependency>
			<groupId>com.ning</groupId>
			<artifactId>async-http-client</artifactId>
			<version>${httpclient-version}</version>
			<scope>test</scope>
		</dependency>
		<!-- used by spring -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib</artifactId>
			<version>${cglib-version}</version>
		</dependency>
		<!-- apis -->
		<dependency>
			<groupId>javax.inject</groupId>
			<artifactId>javax.inject</artifactId>
			<version>${javax-inject-version}</version>
		</dependency>
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${servlet-api-version}</version>
		</dependency>
		<!-- logging -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>${logback-version}</version>
		</dependency>
		<dependency>
			<groupId>janino</groupId>
			<artifactId>janino</artifactId>
			<version>${janino-version}</version>
		</dependency>
		<dependency>
			<groupId>commons-lang</groupId>
			<artifactId>commons-lang</artifactId>
			<version>${commons-lang-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j-version}</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>${slf4j-version}</version>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring-version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-context</artifactId>
			<version>${spring-version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Rabbit MQ -->
		<dependency>
  			<groupId>com.rabbitmq</groupId>
  			<artifactId>amqp-client</artifactId>
  			<version>${rabbitmq-version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.geronimo.specs</groupId>
			<artifactId>geronimo-jms_1.1_spec</artifactId>
			<version>${geromio-jms}</version>
		</dependency>
	</dependencies>
</project>

