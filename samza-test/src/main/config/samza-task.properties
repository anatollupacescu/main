job.factory.class=org.apache.samza.job.yarn.YarnJobFactory
job.name=samza-task
job.id=2
job.coordinator.system=kafka
job.coordinator.replication.factor=1

# YARN
#yarn.package.path=file://${basedir}/target/${project.artifactId}-${pom.version}-dist.tar.gz
#yarn.package.path=http://master:8000/target/samza-task-0.10.0-dist.tar.gz
yarn.package.path=hdfs://master/jobs/samza-task-0.10.0-dist.tar.gz
yarn.container.count=3

# Task
task.class=samza.examples.task.SamzaTask
task.inputs=kafka.task-in
#task.opts=-agentlib:jdwp=transport=dt_socket,address=localhost:9009,server=y,suspend=y

task.checkpoint.factory=org.apache.samza.checkpoint.kafka.KafkaCheckpointManagerFactory
task.checkpoint.system=kafka

# Serializers
#serializers.registry.json.class=org.apache.samza.serializers.JsonSerdeFactory
serializers.registry.string.class=org.apache.samza.serializers.StringSerdeFactory
serializers.registry.metrics.class=org.apache.samza.serializers.MetricsSnapshotSerdeFactory
serializers.registry.integer.class=org.apache.samza.serializers.IntegerSerdeFactory

# Metrics
metrics.reporters=snapshot,jmx
metrics.reporter.snapshot.class=org.apache.samza.metrics.reporter.MetricsSnapshotReporterFactory
metrics.reporter.snapshot.stream=kafka.metrics
metrics.reporter.jmx.class=org.apache.samza.metrics.reporter.JmxReporterFactory

# Systems
systems.kafka.samza.factory=org.apache.samza.system.kafka.KafkaSystemFactory
systems.kafka.samza.msg.serde=string
systems.kafka.consumer.auto.offset.reset=largest
systems.kafka.consumer.zookeeper.connect=host1:2181,host2:2181,host3:2181
systems.kafka.producer.bootstrap.servers=host1:9092,host2:9092,host3:9092
